nameOverride: ""
fullnameOverride: ""

replicaCount: 1

image:
  repository: ajanvier/polr
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []

# Please see https://github.com/ajanvier/docker-polr#environment-variables for complete list of environment variables.
# Admin account and mail settings are provided through their own values.
env:
  - name: APP_ADDRESS
    value: polr.local
  - name: APP_NAME
    value: Polr

admin:
  password: admin
  username: admin
  email: ""
  # expected key is ADMIN_PASSWORD
  existingSecret: ""

# will be used if mysql.enabled is false
externalDatabase:
  host: "polr-mysql"
  port: "3306"
  database: "polr"
  username: "polr"
  password: "polr"
  ## @param externalDatabase.existingSecret Use existing secret for password details. The secret has to contain the key `mysql-password`
  ## NOTE: When it's set the externalDatabase.password is ignored.
  existingSecret: ""

mail:
  enabled: false
  host: ""
  port: ""
  username: ""
  password: ""
  fromAddress: ""
  fromName: ""
  ## @param mail.existingSecret Use existing secret for password details. The secret has to contain the key `MAIL_PASSWORD`
  ## NOTE: When it's set the mail.password is ignored.
  existingSecret: ""

mysql:
  # if disabled please provide db-attributes via externalDatabase attributes
  enabled: true
  auth:
    database: polr
    password: polr
    username: polr
    ## @param mysql.auth.existingSecret Use existing secret for password details. The secret has to contain the keys `mysql-root-password`, `mysql-replication-password` and `mysql-password`
    ## NOTE: When it's set the mysql.auth.rootPassword, mysql.auth.password, mysql.auth.replicationPassword are ignored.
    existingSecret: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
