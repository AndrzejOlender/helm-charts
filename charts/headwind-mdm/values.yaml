replicaCount: 1

image:
  repository: headwindmdm/hmdm
  pullPolicy: Always
  # Overrides the image tag
  tag: "0.1.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

headwind:
  adminEmail: ""
  baseDomain: ""
  clientVersion: "5.04"
  downloadCredentials: false
  hdmUrl: "https://h-mdm.com/files/hmdm-5.12.1-os.war"

persistence:
  enabled: false
  annotations: {}
  accessModes:
    - ReadWriteOnce
  existingClaim: ""
  storageClass: ""
  size: 10Gi

postgresql:
  # -- enable PostgreSQLâ„¢ subchart from Bitnami
  enabled: true
  ## Authentication parameters
  auth:
    # -- Name for a custom database to create
    database: mychart
    # -- Name of existing secret to use for PostgreSQL credentials
    existingSecret: ""
    # -- Password for the custom user to create. Ignored if postgresql.auth.existingSecret is provided
    password: mychart
    # -- Name for a custom user to create
    username: mychart

externalPostgresql:
  ## Authentication parameters
  auth:
    # -- Name of the database to use
    database: mychart
    # -- Name of existing secret to use for PostgreSQL credentials
    existingSecret: ""
    # -- Password to use
    password: mychart
    # -- Name of the user to use
    username: mychart
    # -- Key in the secret containing the password
    userPasswordKey: ""
  # -- Hostname of the PostgreSQL database
  hostname: ""
  # -- Port used to connect to PostgreSQL database
  port: 5432
